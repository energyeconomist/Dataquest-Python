#Mission 7: Functions - Intermediate

# In this mission, I continued learning more about the functions. In particular, I learned that I should avoid using 
# the name of a built-in functions as they overwrite the built-in functions.
# I also read descriptions of the some of the built-in functions in the official Python documentation.
# I learned that the variables defined in the main program are said to be in the global scope,
# while the variables defined inside a function are in the local scope.
# Python searches the global scope if a variable is not in the local scope, but the reverse does not apply.

# Below is the code that I wrote during this mission.

## 1. Interfering with the Built-in Functions ##

a_list = [1, 8, 10, 9, 7]
print(max(a_list))

def max(a_list):
    a_string = "No max value returned"
    return a_string

max_val_test_0 = max(a_list)
print(max_val_test_0)

del max

## 3. Default Arguments ##

# INITIAL CODE
def open_dataset(file_name = 'AppleStore.csv'):
    
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    return data

apps_data = open_dataset()
print(apps_data[:2])

## 4. The Official Python Documentation ##

one_decimal = round(3.43,1)
two_decimals = round(0.23321,2)
five_decimals = round(921.2225227,5)

## 5. Multiple Return Statements ##

# INITIAL CODE
def open_dataset(file_name='AppleStore.csv'):
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    return data
# SOLUTION CODE

def open_dataset(file_name = 'AppleStore.csv', header=True):
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[1:]
    else:
        return data
    
apps_data = open_dataset('AppleStore.csv')

## 6. Returning Multiple Variables ##

# INITIAL CODE
def open_dataset(file_name='AppleStore.csv', header=True):        
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[1:]
    else:
        return data
    
# SOLUTION CODE
def open_dataset(file_name='AppleStore.csv', header=True):        
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[1:], data[0]
    else:
        return data
    
all_data = open_dataset()
header = all_data[1]
apps_data = all_data[0]

## 7. More About Tuples ##

def open_dataset(file_name='AppleStore.csv', header=True):        
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[1:], data[0]
    else:
        return data
    
#def header_and_rest(header, apps_data):
   # header = data[0]
   # apps_data = data[1:]
   # return header, apps_data
    
apps_data, header = open_dataset()
