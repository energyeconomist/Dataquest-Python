#Features of Profitable Apps for the App Store and Google Play Markets

#In this project, I act as a data analyst working for a company that builds Android and iOS mobile apps. 
#Our company only builds apps that are free to download and install. 
#Therefore, our main source revenue consists of in-app ads. 
#This means that our revenue mostly relies on the number of users who use our app and engage with the ads.

#My goal in this project is to analyze data to help our developers understand what type of apps are likely to attract more users in the App Store and Google Play Markets.

from csv import reader

## Apple Store Data Set ##
open_file1 = open('AppleStore.csv')
read_file1 = reader(open_file1)
ios = list(read_file1)
ios_header = ios[0]
ios = ios[1:]

## Google Play Store Data Set ##
open_file2 = open('googleplaystore.csv')
read_file2 = reader(open_file2)
android = list(read_file2)
android_header = android[0]
android = android[1:]

## Opening and Exploring Data

#As of September 2018, there were approximately 2 million iOS apps available on the App Store and 2.1 million Android apps on Google Play.

#Running an analysis on 4 million apps requires significant amount of time and money. 
#For that reason, we will work on a sample instead. To avoid spending resources with collecting new data ourselves, 
#we should first try to see whether we can find any relevant existing data at no cost. 
# Luckily, we have two data sets that seem suitable for that purpose:

#* [Android Data Set](https://www.kaggle.com/lava18/google-play-store-apps) contains data about approximately ten thousand apps from Google Play.
#* [iOS Data Set](https://www.kaggle.com/ramamet4/app-store-apple-data-set-10k-apps) contains data about approximately ten thousand apps from the App Store.

#Let's start by open the two data sets and continue with exploring them.

def explore_data(dataset, start, end, rows_and_columns = False):
    dataset_slice = dataset[start:end]
    for row in dataset_slice:
        print(row)
        print('\n') #adds a new (empty) line after each row
        
    if rows_and_columns:
        print('Number of rows:', len(dataset))
        print('Number of columns:', len(dataset[0]))
